name: Build monarch wheels

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/wheels.yml
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/wheels.yml
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: cuda12.6-py${{ matrix.python-version }}-${{ matrix.name }}
    strategy:
      fail-fast: false  # Changed to false to see results from all Python versions
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - name: 4xlarge
            runs-on: linux.g5.4xlarge.nvidia.gpu
            torch-spec: '--pre torch --index-url https://download.pytorch.org/whl/nightly/cu126'
            gpu-arch-type: "cuda"
            gpu-arch-version: "12.6"
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    with:
      timeout: 60
      runner: ${{ matrix.runs-on }}
      gpu-arch-type: ${{ matrix.gpu-arch-type }}
      gpu-arch-version: ${{ matrix.gpu-arch-version }}
      submodules: recursive
      upload-artifact: monarch-${{ matrix.python-version }}-${{ matrix.gpu-arch-type }}${{ matrix.gpu-arch-version }}
      script: |
        conda create -n venv python=${{ matrix.python-version }} -y
        conda activate venv
        export PATH=/opt/rh/devtoolset-10/root/usr/bin/:$PATH
        python -m pip install --upgrade pip

        # Install native dependencies
        dnf update -y
        dnf install clang-devel libunwind libunwind-devel -y

        # Install rust and setup nightly toolchain
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
        rustup toolchain install nightly
        rustup default nightly

        # Install torch
        pip install torch

        # Install Python dependencies
        pip install setuptools-rust
        pip install pyzmq requests numpy pyre-extensions

        # Build wheel
        python setup.py bdist_wheel
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/torchmonarch/
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1



